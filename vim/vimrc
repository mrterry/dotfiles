set nocompatible " do not use vi compatible mode

" enable pathogen
source ~/.vim/bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()


filetype plugin indent on " enable filetype checking, plugins and indention
set omnifunc=syntaxcomplete#Complete
set hlsearch incsearch " highlights all patterns matching search
set ruler " show line/column number
set title " show the title in window
set autochdir " open files relative to directory of currently open file
set scrolloff=5 " keep at least 5 lines below cursor
set wildmode=longest:full "set wildmenu
set wildmenu
set backspace=indent,eol,start
set foldlevelstart=99


" saves and switches to next file for editing
map B :w<CR>:bnext<CR>
" map m(M) to next(prev) error in quickfix
map m :cn<CR>zv
map M :cp<CR>zv
" map <leader> m(M) to next(prev) location in location list
map <Leader>m :lnext<CR>zv
map <Leader>M :lprev<CR>zv
" navigate between screen splits
map ,h <C-W>h
map ,l <C-W>l
map ,j <C-W>j
map ,k <C-W>k
" fold with \f, update folds with \F
map <Leader>f za
map <Leader>F zx
" Toggle line numbers with <F2>
nnoremap <F2> :set nonumber!<CR>:set foldcolumn=0<CR>
nnoremap <F4> :make<CR>
nmap <F6> :TagbarToggle<CR>


" Configure filetypes
" use setf ft if only executing when no default found
autocmd BufRead,BufNewFile *.cmake,CMakeLists.txt,*.cmake.in runtime! indent/cmake.vim
autocmd BufRead,BufNewFile *.cmake,CMakeLists.txt,*.cmake.in setf cmake
autocmd BufRead,BufNewFile *.ctest,*.ctest.in setf cmake
autocmd BufRead,BufNewFile bucky.inp setf namelist
autocmd BufRead,BufNewFile *.nml setf namelist
autocmd BufRead,BufNewFile *.scss setf scss
autocmd BufRead,BufNewFile *.sass setf sass
autocmd BufRead,BufNewFile *.hydra setf hydra
autocmd BufRead,BufNewFile *.dak setf dakota
autocmd BufReadPre,BufNewFile __init__.py :let b:did_pyflakes_plugin=1
autocmd BufReadPre,BufNewFile *.pyx :let b:did_pyflakes_plugin=1
autocmd BufReadPre,BufNewFile *.pxd :let b:did_pyflakes_plugin=1
" use set ft=ft to override defaults
autocmd BufRead,BufNewFile *.i set ft=yorick


" Set colorscheme
set t_Co=256
syntax enable
set background=dark
let g:solarized_termcolors=256
let g:solarized_termtrans = 1
colo solarized
" change colorscheme for vimdiff
if &diff | colo shobogenzo | endif
au FilterWritePost * if &diff | colo shobogenzo | else | colo solarized | endif
au BufWinLeave * colo solarized



" Configure plugins
set tags=~/doc/tags
let g:easytags_file="~/doc/tags/easy_tags"
let g:easytags_updatetime_autodisable = 1
let g:EnhCommentifyBindInInsert = 'N'
let g:localvimrc_ask = 0
let g:syntastic_enable_highlighting = 1
let g:localvimrc_sandbox = 0
